<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="TelemetryExporter.UI.Views.SelectWidgets"
             xmlns:local="clr-namespace:TelemetryExporter.UI.CustomControls"
             xmlns:models="clr-namespace:TelemetryExporter.UI.CustomModels"
             xmlns:viewModels="clr-namespace:TelemetryExporter.UI.ViewModels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converters="clr-namespace:TelemetryExporter.UI.Converters"
             Title="Settings">
    <Shell.BackButtonBehavior>
        <BackButtonBehavior />
    </Shell.BackButtonBehavior>
    <ContentPage.BindingContext>
        <viewModels:SelectWidgetsViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <converters:ExpanderParametersConverter x:Key="expanderParametersConverter" />
        <converters:ExportTypeEnumConverter x:Key="exportTypeEnumConverter" />
    </ContentPage.Resources>

    <ScrollView VerticalScrollBarVisibility="Default" >
        <VerticalStackLayout MinimumWidthRequest="800" HorizontalOptions="Fill" Padding="30, 0" >
            <Image x:Name="elevationImage"
                   HorizontalOptions="FillAndExpand"
                   VerticalOptions="FillAndExpand" 
                   BackgroundColor="blue"
                   WidthRequest="700"/>
            <Label Text="The image is only for reference" FontAttributes="Italic" HorizontalTextAlignment="Center" />
            <Label Text="Select a range from your activity. &#10;The range below works with elapsed time." />

            <AbsoluteLayout x:Name="pausedIntervals" ></AbsoluteLayout>

            <local:RangeSlider x:Name="rangeDatesActivity" />

            <Grid ColumnDefinitions="auto, auto, 20, auto, auto, 20, auto, auto" ColumnSpacing="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Label Text="Start date:" />
                <Label Grid.Column="1" x:Name="selectedStartTime" HorizontalOptions="Start" FontAttributes="Bold" />
                <Label Grid.Row="1" Text="End date:"/>
                <Label Grid.Row="1" Grid.Column="1" x:Name="selectedEndTime" HorizontalOptions="Start" FontAttributes="Bold" />
                <Label Grid.Column="3" Text="Since beginning:" />
                <Label Grid.Column="4" x:Name="startSinceBeginning" />
                <Label Grid.Row="1" Grid.Column="4" x:Name="endSinceBeginning" />
                <Label Grid.Column="6" Text="Distance:"/>
                <Label Grid.Row="1" Grid.Column="6" Text="Duration:"/>
                <Label Grid.Column="7" x:Name="selectedDistance" />
                <Label Grid.Row="1" Grid.Column="7" x:Name="selectedDuration" />
            </Grid>

            <Grid ColumnDefinitions="150"  ColumnSpacing="2" Margin="0,10" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Picker Grid.Row="0" Grid.Column="0" x:Name="selectedFps" Title="Select FPS:" SelectedIndex="0">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:Byte}" >
                            <x:Byte>2</x:Byte >
                            <x:Byte>4</x:Byte>
                            <x:Byte>6</x:Byte>
                            <x:Byte>8</x:Byte>
                            <x:Byte>10</x:Byte>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>
            </Grid>

            <Grid ColumnDefinitions="auto, 300"  ColumnSpacing="2" Margin="0,10" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Label Grid.Row="1" Grid.Column="1" Text="Check this if you want statistics to be calculated from left marker instead from the beginning of the activity." />
                <CheckBox Grid.Row="1" x:Name="useStartMarker" Grid.Column="0"  />
            </Grid>

            <Label Text="Select Widgets below:" Style="{StaticResource SubHeadline}" Margin="0,20" />
            <CollectionView ItemsSource="{Binding WidgetCategories}" >
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="models:ExpanderDataItem">
                        <toolkit:Expander x:Name="theExpander" Command="{Binding SwitchStateCommand}" >
                            <toolkit:Expander.CommandParameter>
                                <MultiBinding Converter="{StaticResource expanderParametersConverter}">
                                    <Binding Source="{x:Reference theExpander}" />
                                    <Binding Source="{x:Reference theLabel}" />
                                </MultiBinding>
                            </toolkit:Expander.CommandParameter>
                            <toolkit:Expander.Header >
                                <AbsoluteLayout BackgroundColor="LightSkyBlue" HeightRequest="50">
                                    <Rectangle Stroke="Black" StrokeThickness="2" 
                                                AbsoluteLayout.LayoutBounds="0,0, 1, 1"
                                                AbsoluteLayout.LayoutFlags="SizeProportional"/>
                                    <Label Text="{Binding Category}" FontAttributes="Bold" Style="{StaticResource SubHeadline}"
                                            AbsoluteLayout.LayoutFlags="XProportional,YProportional"
                                            AbsoluteLayout.LayoutBounds="0.5, 0.5" />
                                    <Label Text="V" x:Name="theLabel" FontSize="Large" HorizontalOptions="Start" AbsoluteLayout.LayoutBounds="25, 0" />
                                </AbsoluteLayout>
                            </toolkit:Expander.Header>
                            <toolkit:Expander.Content >
                                <HorizontalStackLayout >
                                    <CollectionView ItemsSource="{Binding Widgets}" >
                                        <CollectionView.ItemsLayout>
                                            <LinearItemsLayout Orientation="Horizontal"/>
                                        </CollectionView.ItemsLayout>
                                        <CollectionView.ItemTemplate>
                                            <DataTemplate x:DataType="models:WidgetData" >
                                                <VerticalStackLayout MaximumWidthRequest="300" WidthRequest="300" Padding="10,10" >
                                                    <Image Source="{Binding ImagePath}" BackgroundColor="SkyBlue" VerticalOptions="FillAndExpand" HeightRequest="230" />
                                                    <local:WidgetCheckBox Value="{Binding Index}" CheckedChanged="WidgetCheckBox_CheckedChanged" HorizontalOptions="Center" />
                                                </VerticalStackLayout>
                                            </DataTemplate>
                                        </CollectionView.ItemTemplate>
                                    </CollectionView>
                                </HorizontalStackLayout>
                            </toolkit:Expander.Content>
                        </toolkit:Expander>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>


            <Label Text="Select Export Type:" FontAttributes="Bold" Margin="0,10,0,0" />
            <Grid ColumnDefinitions="auto, auto" ColumnSpacing="10" 
                  RadioButtonGroup.SelectedValue="{Binding ExportType, Converter={StaticResource exportTypeEnumConverter}}"
                  RadioButtonGroup.GroupName="ExportTypeGroup" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>

                <RadioButton Grid.Row="0" Grid.Column="0" Value="ZipFileArchive" Content="Zip File Archive" IsChecked="True" />
                <RadioButton Grid.Row="0" Grid.Column="1" Value="FolderFile" Content="Folder File" />
            </Grid>

            <Grid ColumnDefinitions="500, auto" Margin="0,10">

                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Label Text="Choose save location:" />
                <Entry Grid.Row="1" Grid.Column="0" x:Name="saveLocation" IsEnabled="False" BackgroundColor="LightGray" Text="C:\..." TextColor="DarkSlateGray" />
                <Button Grid.Row="1" Grid.Column="1" Text="Browse..." Command="{Binding ChooseSaveFolder}" CommandParameter="{Binding Source={x:Reference saveLocation}}"/>
            </Grid>

            <Button Text="Export images" x:Name="exportBtn" BackgroundColor="Green" FontAttributes="Bold" FontSize="Large" Clicked="ExportBtn_Clicked" />

            <Grid ColumnDefinitions="*,auto" Margin="0, 10" >
                <ActivityIndicator x:Name="exportLoaderIndicator" VerticalOptions="Center"  HorizontalOptions="End" Margin="0, 0, 20, 0"/>
                <Button Grid.Column="1" Text="Cancel" x:Name="cancelBtn" BindingContext="{x:Reference Name=exportLoaderIndicator}" BackgroundColor="Orange" FontSize="Medium" IsEnabled="{Binding Path=IsRunning}" HorizontalOptions="End" Clicked="CancelBtn_Clicked" />
            </Grid>

            <Grid ColumnDefinitions="auto,*" Margin="0, 10">
                <Label Text="{Binding Source={x:Reference exportProgress}, Path=Progress, StringFormat='{0:P}' }" />
                <ProgressBar Grid.Column="1" x:Name="exportProgress" ProgressColor="Green" />
            </Grid>

            <ScrollView MaximumHeightRequest="150"  VerticalScrollBarVisibility="Always" WidthRequest="300">
                <Border Stroke="Black" StrokeThickness="4">
                    <Label x:Name="statusPanel" MaximumHeightRequest="300" />
                </Border>
            </ScrollView>
        </VerticalStackLayout>
    </ScrollView>
</ContentPage>